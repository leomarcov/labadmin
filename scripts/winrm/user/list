#!/usr/bin/env bash
#===================================================================================
#     FILE: user/list
#   AUTHOR: Leonardo Marco (labadmin@leonardomarco.com)
#  LICENSE: GNU General Public License v3.0
#===================================================================================
script_id="$(echo ${BASH_SOURCE[0]} | sed 's\^'"$scripts_path"'/*\\g')"		# Script filename with relative script path

#=== LOAD INFO =====================================================================
if [ "$1" = "--load-scriptinfo" ]; then
	script_desc="Show user list and show specific user info"
	script_type="winrm-ps"
	script_bg="sub"
	script_admindeps=""
	script_hostdeps=""
	load_scriptinfo "$script_id" "$script_desc" "$script_type" "$script_bg" "$script_admindeps" "$script_hostdeps"
	return

#=== READ PARAMS ===================================================================
elif [ "$1" = "--readparams" ]; then
	# PARAM1: username
    read_param "$script_id" 1 "Username (empty only user list)" "" ""
	return
fi


#=== EXEC SCRIPT ===================================================================
user="$1"

# SHOW USERS
echo 'Get-LocalUser'

# SHOW USER INFO AND GROUPS
[ "$user" ] && echo 'echo ""; echo ""; echo "USER INFO '"$user"'"; echo "---------------------"; ' && echo 'Get-LocalUser -Name "'"$user"'" | select *' && echo '$adsi = [ADSI]"WinNT://$env:COMPUTERNAME"
$adsi.Children | where {$_.SchemaClassName -eq "user" -and $_.name -eq "'"$user"'"} | Foreach-Object {
	$groups = $_.Groups() | Foreach-Object {$_.GetType().InvokeMember("Name", "GetProperty", $null, $_, $null)}
	$_ | Select-Object @{n="UserName";e={$_.Name}},@{n="Groups";e={$groups -join ";"}}
}'
