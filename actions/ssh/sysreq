#!/usr/bin/env bash
#===================================================================================
#     FILE: power/sysreq
#   AUTHOR: Leonardo Marco (labadmin@leonardomarco.com)
#  LICENSE: GNU General Public License v3.0
#===================================================================================
script_id="$(echo ${BASH_SOURCE[0]} | sed 's\^'"$scripts_path"'/*\\g')"		# Script filename with relative script path

#=== LOAD INFO =====================================================================
if [ "$1" = "--load-scriptinfo" ]; then
	script_desc="Send system request signal"
	script_type="ssh"
	script_bg="sub"
	script_admindeps=""
	script_hostdeps=""
	load_scriptinfo "$script_id" "$script_desc" "$script_type" "$script_bg" "$script_admindeps" "$script_hostdeps"
	return

#=== READ PARAMS ===================================================================
elif [ "$1" = "--readparams" ]; then
	# PARAM1: reboot if active user
	read_param "$script_id" 1 "Sigals to send (h for help)" "" "^[reisub]$" "${S_B}r${S_R}   Turns off keyboard raw mode and sets it to XLATE
${S_B}e${S_R}   Send a SIGTERM to all processes, except for init
${S_B}i${S_R}   Send a SIGKILL to all processes, except for init
${S_B}s${S_R}   Attempts to sync disks attached to the system
${S_B}u${S_R}   Attempts to unmount and remount all file systems as read-only
${S_B}b${S_R}   Reboots the kernel without first unmounting file systems or syncing disks attached to the system"
	return
fi


#=== EXEC SCRIPT ===================================================================
com="$1"

echo 1 > /proc/sys/kernel/sysrq
echo "$com" > /proc/sysrq-trigger
