#!/usr/bin/env bash                                                                                                                                                                                                 
#===================================================================================
#     FILE: screen/show
#   AUTHOR: Leonardo Marco (labadmin@leonardomarco.com)
#  LICENSE: GNU General Public License v3.0
#===================================================================================
script_id="$(echo ${BASH_SOURCE[0]} | sed 's\^'"$scripts_path"'/*\\g')"     # Script filename with relative script path

#=== LOAD INFO =====================================================================
if [ "$1" = "--load-scriptinfo" ]; then
    script_desc="Show screenshots hosts dinamically"
    script_type="admin+local+admin"
    script_bg="force sub"
    script_admindeps="feh"
    script_hostdeps="import(imagemagick)"
    load_scriptinfo "$script_id" "$script_desc" "$script_type" "$script_bg" "$script_admindeps" "$script_hostdeps"
    return

#=== READ PARAMS ===================================================================
elif [ "$1" = "--readparams" ]; then
    # PARAM1: image quality
    read_param "$script_id" 1 "Image quality (default 50, range 10-100)"  "50" "^[1-9]([0-9])*$"
    return
fi


#=== EXEC SCRIPT ===================================================================

# ADMIN EXEC STAGE1
if [ "${labadmin_script_type}" = "admin" ] && [ "${labadmin_script_type_state}" = "1" ]; then
    # CREATE TMP DIR
    export dir_img="$(mktemp -d "$labadmin_tmp_path/screenshot-display.XXXXXXXX")"
    labadmin_info-list "Creating temp directory: ${S_B}$dir_img${S_R}"

(
    # Wait for first image created
    sleep 1
    n=5 	# Number of seconds to wait for first image host
    while true; do
        pending_imgs=$(find "$dir_img" -name "*.jpg" -size 0)                       #List of img file paths pending
        [ ! "$pending_imgs" ] && break
        pending_hosts=$(echo "$pending_imgs" | sed 's/.*\///g' | sed 's/.jpg$//g' | sed -z 's/\n/ /g')  # List of hosts pending

        labadmin_info-list "Waiting for images: $pending_hosts"
        n=$((n-1))
        if [ "$n" -le 0 ]; then
            labadmin_error-list "Skipping hosts: $pending_hosts"
            rm -f $pending_imgs
            break
        fi  
        sleep 1
    done

    # Start imagen viewer tool
	echo
	labadmin_info-list "Press ${S_B}[ENTER]${S_R} or close screenshot window to ${S_B}stop${S_R} cast\n"
    feh -S filename -R 1 --title "%n" "$dir_img"/*.jpg 2>/dev/null
    # Remove dir 
    [ -d "$dir_img" ] && { labadmin_info-list "Removing $dir_img"; rm -rf "$dir_img"; }
)&


# LOCAL EXEC: 
elif [ "${labadmin_script_type}" = "local" ]; then
	export iq="$1"
	[ "$iq" -lt 10 ] && iq=10; [ "$iq" -gt 100 ] && iq=100
    export dir_img="$(ls -dt "$labadmin_tmp_path/screenshot-display"* | head -1)"
    export file_img="${dir_img}/HOST_${labadmin_nhost}.jpg"
    touch "$file_img"

    while true; do
        [ ! -d "$dir_img" ] && break
        labdmin_ssh_host_comm "${labadmin_nhost}" '
u=($(labadmin_users-display | head -1))
[ ! "${u[0]}" ] && labadmin_error "No users logged" 1
su -l "${u[0]}" -c "DISPLAY=${u[1]} xset b off; import -window root -display "${u[1]}" -quality '${iq}' -interlace Plane jpg:-"' > "${file_img}.tmp" 
        if [ "$?" -eq 0 ]; then
			[ ! "$c" ] && echo "Connection successful"; c=1
		else
			exit
		fi
        cp "${file_img}.tmp" "${file_img}" 2>/dev/null
        sleep 0.5
    done


# ADMIN EXEC STAGE 2
elif [ "${labadmin_script_type}" = "admin" ] && [ "${labadmin_script_type_state}" = "2" ]; then
    dir_img="$(ls -dt "$labadmin_tmp_path/screenshot-display"* | head -1)/"
    sleep 2
    read 
    [ -d "$dir_img" ] && { labadmin_info-list "Removing $dir_img"; rm -rf "$dir_img"; }
    true
fi    
