#!/usr/bin/env bash
#===================================================================================
#     FILE: exam/backup/get
#   AUTHOR: Leonardo Marco (labadmin@leonardomarco.com)
#  LICENSE: GNU General Public License v3.0
#===================================================================================
script_id="$(echo ${BASH_SOURCE[0]} | sed 's\^'"$scripts_path"'/*\\g')"		# Script filename with relative script path

#=== LOAD INFO =====================================================================
if [ "$1" = "--load-scriptinfo" ]; then
	script_desc="Download exam backup to admin local machine"
	script_type="local"
	script_bg="sub"
	script_admindeps=""
	script_hostdeps="7za(p7zip-full|p7zip) md5sum(coreutils)"
	load_scriptinfo "$script_id" "$script_desc" "$script_type" "$script_bg" "$script_admindeps" "$script_hostdeps"
	return

#=== READ PARAMS ===================================================================
elif [ "$1" = "--readparams" ]; then
	# PARAM1: backup number
	read_param "$script_id" 1 "Backup number (h for help)" "" "(^[0-9]+|$)|^$" "\tExam backup ID number\n\t Empty value for select from list"
	read_param "$script_id" 2 "Destination path (default $HOME)" "$HOME" ""
    return
fi


#=== EXEC SCRIPT ===================================================================
enum="$1"
dest="$(eval echo "$2")"								# Resolve scape characteres like \ ,*, etc.
labadmin_cache_path="/home/.labadmin-cache/"			# Labadmin exam cache path

# CHECK DEST
[ ! -w "$dest" ] || [ ! -w "$dest" ] && labadmin_error "Can't write in local path $dest" 1

# SHOW LIST
if [ !"$enum" ]; then
	labadmin_cache_path="/home/.labadmin-cache/"			# Labadmin exam cache path
	backups_list="$(labdmin_ssh_host_comm "${labadmin_nhost}" "du -sh \"${labadmin_cache_path}/EXAM_\"* 2>/dev/null")"
	if [ $? -ne 0 ]; then
	    echo "No exams saved"
	    exit 0
	fi
	
	n=1
	m="${S_B}ID DATE TIME USER DAYS-AGO SIZE${S_R}\n"
	IFS=$'\n'
	for l in $backups_list; do
		e=$(echo "$l" | cut -f2);									# Exam PATH
		d=$(basename "$e"|cut -f2 -d_); 							# Exam DATE
		t=$(basename "$e"|cut -f3 -d_ | tr - :)						# Exam TIME
		u=$(basename "$e"|cut -f4 -d_)								# Exam USER
		s=$(echo "$l" | cut -f1)									# Exam SIZE
		da=$((($(date +%s)-$(date -d "$d $t" +%s))/86400))			# Exam DAYS-AGO
	    m="${m} [$n] ${d} ${t} ${u} ${da} ${s}\n"					# MENU
	    n=$(($n+1))													# Exam ID
	done
	echo
	echo -e "$m" | column -t | sed '1a------------------------------------------------------------------------'
	echo
fi

read -p "Select backup ID: " eid


# CHECK EXAM FILENAME

[ ! "$edir" ] && labadmin_error "Can't access backup number $enum ($exam_backups)" 1

# DOWNLOAD FILE
dest="$dest/$(basename "$edir")_HOST${labadmin_nhost}"
mkdir "$dest" || labadmin_error "Cant create dest dir: $dest" 1 
echo -e "Destination: ${S_B}$dest${S_R}"
labdmin_ssh_host_comm "${labadmin_nhost}" 'tar -c -C "'"${edir}"'" .' | tar -xv -C "$dest"
chmod 760 "$dest"


