#!/usr/bin/env bash
#===================================================================================
# LABADMIN GLOBAL VARIABLES AND FUNCTIONS
#         FILE: global_admin
#  DESCRIPTION: Gobal config varaibles for labadmin admin
#
#       AUTHOR: Leonardo Marco (labadmin@leonardomarco.com)
#	   LICENSE: GNU General Public License v3.0
#      VERSION: 2018.06
#      CREATED: 16.02.2017
#===================================================================================

#===============================================================================
#  GLOBAL CONFIG
#===============================================================================
readonly labadmin_script="$(readlink -f "$0")"                      				# Main script labadmin with path
readonly labadmin_install="${labadmin_path}/install"								# Install script path
readonly labs_path="$labadmin_path/labs/"					    					# Labs configs directory path
readonly log_path="/var/log/labadmin.log"	                      					# Logs file path
readonly bin_path="$labadmin_path/bin/"                                             # Labadmin bin path
readonly config_path="${labadmin_path}/conf/labadmin.conf"                          # Labadmin global config file path                                                          
scripts_path="$labadmin_path/actions/"                                              # Scripts directory




#=== FUNCTION ==================================================================
# NAME: labadmin_show_version
# DESCRIPTION: show current labadmin version
#===============================================================================
function labadmin_show_version() {
    local lv=$(cat "${labadmin_path}/version")
     echo -e "${S_B}LABADMIN${S_R} ${S_D}v${lv}${S_R}"
}


#=== FUNCTION ==================================================================
# NAME: labadmin_load-config-file
# DESCRIPTION: load labadmin config file and initialize values
#===============================================================================
function labadmin_load-config-file() {
    [ ! -r "$config_path" ] && labadmin_error "ERROR: can't access labadmin config file ${config_path//\/\//\/}" 1
    source "$config_path" || labadmin_error "ERROR: error loading labadmin config file: ${config_path//\/\//\/}" 1

    # Set deault values
    [ ! "$iface" ] && iface=$(labadmin_iface 8.8.8.8)
    [ ! "$scan_timeout" ] && scan_timeout=500
    [ ! "$winrmuser" ] && winrmuser="labadmin"
    [ ! "$winrmport" ] && winrmport=5985
    [ ! "$sshport" ] && sshport=58888

    [ ! "$winrmpass" ] && [[ ! "$sshpubkey" || ! "$sshprivatekey" ]] && labadmin_error "ERROR: can't load authentication data on labadmin config file ${config_path//\/\//\/}" 1
}



#=== FUNCTION ==================================================================
# NAME: labadmin_load-lab
# DESCRIPTION: load lab config file and initialize values
#===============================================================================
function labadmin_load-lab() {
    local sm="$srvmode"
    source "$lab_file" || labadmin_error "ERROR: error loading lab file: $lab_file" 1

    # Set deault values
    [ ! "$labname" ] && labname=$(basename "$lab_file")
    [ "$sm" ] && srvmode="$sm"
    [ ! "$srvmode" ] && srvmode="ssh"

    [ ! "$map" ] && labadmin_error "ERROR: no map defined in lab config file $lab_file" 1
    [ "${#macs[*]}" -eq 0 ] && labadmin_error "ERROR: no MACs defined in lab config file $lab_file" 1

    # INITIALIZE MAP
    map="$(echo "$map" | sed '/^\s*$/d')"								# Delete empty lines
    map_nr="$(echo "$map" | wc -l)"										# Row number
    map_nc="$(echo "$map" | awk '{print NF}' | sort -nu | tail -n 1)"	# Column number
}



#=== FUNCTION ==================================================================
# NAME: labadmin_lock_screen
# DESCRIPTION: block keyaboard and hide cursor
#===============================================================================
function labadmin_lock_screen() {
    stty -echo &> /dev/null             # Block keyboard drawing
    cursor_hide                         # Hide cursor
}



#=== FUNCTION ==================================================================
# NAME: labadmin_unlock_screen
# DESCRIPTION: unblock keyaboard and show cursor
#===============================================================================
function labadmin_unlock_screen() {
    stty echo &> /dev/null              # Restore keyboard
    cursor_show                         # Restore cursor
}




#=== FUNCTION ==================================================================
# NAME: labdmin_ssh_host_comm
# DESCRIPTION: exec ssh commands ($2) to host ($1) and append labadmin_lib function
#              function outputs ssh stdout 
# PARAMETERS
#   $1  nhost 
#   $2  commands to exec (add labadmin_lib at beginin)
#===============================================================================
function labdmin_ssh_host_comm() {
    local nhost="$1"
    local commands="$2"
    local ip="${ips[$nhost]}"

    # CHECKS
    [ ! "$ip" ] && labadmin_error "INTERNAL ERROR: labadmin_exec_ssh_host_comm cant find IP address from host $nhost" 1
    [ ! "$commands" ] && labadmin_error "INTERNAL ERROR: labadmin_exec_ssh_host_comm no commands to exec" 1

    # EXEC SSH EXEC COMMANDS
    ssh $ssh_params root@${ip} -p ${sshport} -oStrictHostKeyChecking=no  "
$(cat "${lib_path}/labadmin_lib")

$(labadmin_export_vars_code)

${commands}"
    return
}




#=== FUNCTION ==================================================================
# NAME: labdmin_ssh_host_comm_stdin
# DESCRIPTION: exec ssh commands ($2) to host ($1) and append labadmin_lib function
#			   function stdin is piped to ssh 
#              function outputs ssh stdout 
# PARAMETERS
#   $1  nhost 
#   $2  commands to exec (add labadmin_lib at beginin). If empty only login
#===============================================================================
function labdmin_ssh_host_comm_stdin() {
	local nhost="$1"
    local commands="$2"
	local ip="${ips[$nhost]}"

    # CHECKS
    [ ! "$ip" ] && labadmin_error "INTERNAL ERROR: labadmin_exec_ssh_host_comm_stdin cant find IP address from host $nhost" 1
    [ ! "$commands" ] && labadmin_error "INTERNAL ERROR: labadmin_exec_ssh_host_comm_stdin no commands to exec" 1

    # EXEC SSH EXEC COMMANDS
    cat - | ssh $ssh_params root@${ip} -p ${sshport} -oStrictHostKeyChecking=no  "
$(cat "${lib_path}/labadmin_lib")

$(labadmin_export_vars_code)

${commands}"
    return
}




#=== FUNCTION ==================================================================
# NAME: labdmin_ssh_host_login
# DESCRIPTION: exec ssh to host and open new login
# PARAMETERS
#   $1  nhost 
#===============================================================================
function labdmin_ssh_host_login() {
    local nhost="$1"
    local ip="${ips[$nhost]}"

    # CHECKS
    [ ! "$ip" ] && labadmin_error "INTERNAL ERROR: labadmin_exec_ssh_host_login cant find IP address from host $nhost" 1
    
    ssh $ssh_params root@${ip} -p ${sshport} -oStrictHostKeyChecking=no 
    return
}

